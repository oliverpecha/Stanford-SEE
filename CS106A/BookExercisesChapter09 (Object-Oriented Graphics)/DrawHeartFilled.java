/*
 * File: DrawHeartFilled.java
 * Name: Oliver Pecha
 * Section Leader: Online Learning
 * -----------------
 * Book / Chapter 9 / Programming Exercise 8
 * -----------------
 * Rewrite the DrawHeart program from the preceding exercise so that it draws the entire heart as a GPolygon that includes both 
 * traditional straight-line edges and arc approximations generated by the addArc method. The advantage of this style is is that 
 * the heart is now fillable, which means that you can produce a filled red heart like this:
 */


import java.awt.Color;
import acm.graphics.*;
import acm.program.*;

public class DrawHeartFilled extends GraphicsProgram {
	
	public void init() {
	    setSize(SCREEN_WIDTH, SCREEN_HEIGHT);
	}

	public void run() {	
		GPolygon heart = heart(RADIUS);
			heart.setFilled(true);
			heart.setFillColor(Color.red);
			heart.setColor(Color.red);
			add(heart, SCREEN_WIDTH / 2, SCREEN_HEIGHT /2);
	}
	
	GPolygon heart(int radius) {
		double hypotenuse = 2 * radius;
		double adjacent = hypotenuse * GMath.sinDegrees(45);
		GPolygon heart = new GPolygon();
		heart.addVertex(0, adjacent);
		heart.addVertex(-adjacent, 0);
		heart.addArc(2 * radius, 2 * radius, -135, -180);
		heart.addArc(2 * radius, 2 * radius, -225, -180);
		return heart;
	}

	private static final int RADIUS = 100;

	private static final int SCREEN_WIDTH = 800;
	private static final int SCREEN_HEIGHT = 500;
}
