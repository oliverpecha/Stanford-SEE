{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;\f1\froman\fcharset0 Times-Italic;\f2\froman\fcharset0 Times-Bold;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
\margl1440\margr1440\vieww12800\viewh14760\viewkind0
\deftab720
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa266\partightenfactor0
\ls1\ilvl0
\f0\fs26\fsmilli13333 \cf2 {\listtext	1.	}\expnd0\expndtw0\kerning0
Explain in your own words the difference between a 
\f1\i function 
\f0\i0 and a 
\f1\i program
\f0\i0 . \uc0\u8232 a function is a block of a program used to simplify overall complexity and offer reusability of the components a program uses\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	2.	}\expnd0\expndtw0\kerning0
Define the following terms as they apply to functions: 
\f1\i call
\f0\i0 , 
\f1\i argument
\f0\i0 , 
\f1\i return
\f0\i0 . \uc0\u8232 - a program calls a function to perform certain operation and pases a set of arguments as values to be processed and once a result is achieved a value is returned back to the program.\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	3.	}\expnd0\expndtw0\kerning0
True or false: Every function in a C++ program requires a prototype. \uc0\u8232 False, but it\'92s recommended to begin with them to increase readability\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	4.	}\expnd0\expndtw0\kerning0
What is the prototype of the function 
\f2\b\fs24 sqrt 
\f0\b0\fs26\fsmilli13333 in the 
\f2\b\fs24 <cmath> 
\f0\b0\fs26\fsmilli13333 library? \
double sqrt(double x);\
float sqrt(float x);\
long double sqrt(long double x);\
// for integral type\
double sqrt(T x);\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	5.	}\expnd0\expndtw0\kerning0
Can there be more than one 
\f2\b\fs24 return 
\f0\b0\fs26\fsmilli13333 statement in the body of a function? \uc0\u8232 No\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	6.	}\expnd0\expndtw0\kerning0
What is a 
\f1\i predicate function? 
\f0\i0 \uc0\u8232 a function that returns a boolean type\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	7.	}\expnd0\expndtw0\kerning0
What is meant by the term 
\f1\i overloading? 
\f0\i0 How does the C++ compiler use 
\f1\i signatures 
\f0\i0 to implement overloading? \uc0\u8232 a function that within the same name can accept different amount of arguments\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	8.	}\expnd0\expndtw0\kerning0
How do you specify a default value for a parameter? \uc0\u8232 inside an overloaded function which will use the default parameters if no other arguments are included within a call\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	9.	}\expnd0\expndtw0\kerning0
True or false: It is possible to specify a default value for the first parameter to a function without specifying a default value for the second. \uc0\u8232 yes\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	10.	}\expnd0\expndtw0\kerning0
What is a 
\f1\i stack frame? 
\f0\i0 \uc0\u8232 The conceptual boundary within a set of local operations are performed before moving into the next call or return to a new stack frame\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	11.	}\expnd0\expndtw0\kerning0
Describe the process by which 
\f1\i arguments 
\f0\i0 are associated with 
\f1\i parameters. 
\f0\i0 \uc0\u8232 Function parameters are the names listed in the function's definition. Function arguments are the real values passed to the function. Parameters will will the definition of the argument with a value\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	12.	}\expnd0\expndtw0\kerning0
Variables declared within a function are said to be 
\f1\i local variables
\f0\i0 . What is the significance of the word 
\f1\i local 
\f0\i0 in this context? \uc0\u8232 They can\'92t be accessed outside of such function or stack frame \
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	13.	}\expnd0\expndtw0\kerning0
What does the term 
\f1\i call by reference 
\f0\i0 mean? \uc0\u8232 parameters are shared between stack frames or within an entire program\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	14.	}\expnd0\expndtw0\kerning0
How do you indicate 
\f1\i call by reference 
\f0\i0 in a C++ program? \uc0\u8232 using ampersand\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	15.	}\expnd0\expndtw0\kerning0
Define the following terms in the context of libraries: 
\f1\i client, implementation, interface. 
\f0\i0 \uc0\u8232 a client is the programmer that uses a library. The implementation is the set of functions a library contains which perform the operations the client needs. The interface sits between the client and the library implementation to facilitate the understanding of the library possibilities\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	16.	}\expnd0\expndtw0\kerning0
If you were writing an interface called 
\f2\b\fs24 mylib.h
\f0\b0\fs26\fsmilli13333 , what lines would you include as the interface boilerplate? \uc0\u8232 #ifndef _error_h #define _error_h #endif\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	17.	}\expnd0\expndtw0\kerning0
Describe the process used to export a constant definition as part of an interface. \uc0\u8232 add extern to the usual definition (const double PI = 3.14\'85) or initiation (const double PI;)\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	18.	}\expnd0\expndtw0\kerning0
What criteria does this chapter list as important in the process of interface design? \
unified, simple, sufficient, general, and stable.\
19. Why is it important for an interface to be stable?\
\pard\tx720\pardeftab720\sa266\partightenfactor0
\cf2 Changes or optimization should not require the clients to change their code as that will most likely generate adversities.\
20. What is meant by the term pseudorandom number?\
Computers are deterministic, using mathematical formulas and procedures only bypasses such nature. Thus even tough you may get very close to randomness, it is preferred to described such values as technically pseudorandom numbers\
21. On most computers, how is the value of RAND_MAX chosen?\
Compiler chooses in relation to hardware specifications. Usually the maximum value a positive integer value a computer can support.\
\
22. What four steps are necessary to convert the result of rand into an integer value with a different range?\
\
23. How would you use the randomInteger function to generate a pseudorandom number between 1 and 100?\
\pard\tx720\pardeftab720\sa266\partightenfactor0
\cf2 int n = randomInteger(1,100);\
24. By executing each of the statements in the implementation by hand, determine whether the randomInteger function works with negative arguments. What are the possible results of calling the function randomInteger(-5, 5)?\
\
25. Assuming that d1 and d2 have already been declared as variables of type int, could you use the multiple assignment statement\
           d1 = d2 = RandomInteger(1, 6);\
to simulate the process of rolling two dice?\
No\
26. True or false: The rand function ordinarily generates the same sequence of random numbers every time a program is run.\
Yes\
27. What is meant by the term seed in the context of random numbers?\
First random number is 1, then all following random numbers are always the same\
\
28. What suggestion does this chapter offer for debugging a program involving\
random numbers?\
Use a seed random number\
\
29. What functions are defined in the final version of the random.h interface? In what context would you use each function?\
randomInteger, get a random integer\
randomReal, get a random double\
\pard\tx720\pardeftab720\sa266\partightenfactor0
\cf2 randomChance, get a random boolean\
setRandomSeed, get the same random values\
\
}