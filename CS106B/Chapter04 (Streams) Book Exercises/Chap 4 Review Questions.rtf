{\rtf1\ansi\ansicpg1252\cocoartf2580
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;\f1\froman\fcharset0 Times-Bold;\f2\froman\fcharset0 Times-Italic;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid1\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat7\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid101\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat7\levelspace360\levelindent0{\*\levelmarker \{decimal\}.}{\leveltext\leveltemplateid201\'02\'00.;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}}
\margl1440\margr1440\vieww14820\viewh16380\viewkind0
\deftab720
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa266\partightenfactor0
\ls1\ilvl0
\f0\fs26\fsmilli13333 \cf2 {\listtext	1.	}\expnd0\expndtw0\kerning0
What are the three standard file streams defined by the 
\f1\b\fs24 <iostream> 
\f0\b0\fs26\fsmilli13333 library? \uc0\u8232 cin, cout, cerr \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa266\partightenfactor0
\ls1\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	2.	}\expnd0\expndtw0\kerning0
What are the formal names for the 
\f1\b\fs24 << 
\f0\b0\fs26\fsmilli13333 and 
\f1\b\fs24 >> 
\f0\b0\fs26\fsmilli13333 operators? \uc0\u8232 insertion and extractor operators\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	3.	}\expnd0\expndtw0\kerning0
What value do the 
\f1\b\fs24 << 
\f0\b0\fs26\fsmilli13333 and 
\f1\b\fs24 >> 
\f0\b0\fs26\fsmilli13333 operators return? Why is this value important? \uc0\u8232 they return the stream\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	4.	}\expnd0\expndtw0\kerning0
What is a 
\f2\i manipulator? 
\f0\i0 \uc0\u8232 It alters the formatting of the console output\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	5.	}\expnd0\expndtw0\kerning0
What is the difference between a 
\f2\i transient 
\f0\i0 and a 
\f2\i persistent 
\f0\i0 property? \uc0\u8232 transient only applies once, persistent modifies all the value since the start of the property application\
\ls1\ilvl0\kerning1\expnd0\expndtw0 {\listtext	6.	}\expnd0\expndtw0\kerning0
In your own words, describe how the 
\f1\b\fs24 fixed 
\f0\b0\fs26\fsmilli13333 and 
\f1\b\fs24 scientific 
\f0\b0\fs26\fsmilli13333 manipulators change the format for floating-point output. What happens if you don\'92t specify either of these options? \uc0\u8232 Fixed defines a certain degree of precision in the decimal values, and scientific represents numbers with letter and numbers. If it is not specified, the default representation will be displayed.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa266\partightenfactor0
\ls2\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	7.	}\expnd0\expndtw0\kerning0
Suppose that the constant 
\f1\b\fs24 PI 
\f0\b0\fs26\fsmilli13333 has been defined as\uc0\u8232 
\f1\b\fs24 const double PI = 3.14159265358979323846; 
\f0\b0\fs26\fsmilli13333 \uc0\u8232 What output manipulators would you use to produce each line of the following sample run: \u8232 3.141592653589793 \
\pard\tx720\pardeftab720\sa266\partightenfactor0
\cf2 	3.141593  setprecision(7)\
	3.141592653589793e+00 scientific\
	3.141593E+00 scientific setprecision(6)\
	          3.141592654 setfill(5) setprecision(10)\
	003.1416\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa266\partightenfactor0
\ls3\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	7.	}\expnd0\expndtw0\kerning0
What is the purpose of the types 
\f1\b\fs24 ifstream 
\f0\b0\fs26\fsmilli13333 and 
\f1\b\fs24 ofstream
\f0\b0\fs26\fsmilli13333 ? \uc0\u8232 they assists writing and reading files\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	8.	}\expnd0\expndtw0\kerning0
The argument to 
\f1\b\fs24 open 
\f0\b0\fs26\fsmilli13333 must be a C-style string. How does this requirement \uc0\u8232 affect the code you write to open a file? \u8232 File name must be written as a C-style string or converted\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	9.	}\expnd0\expndtw0\kerning0
How can you determine if an 
\f1\b\fs24 open 
\f0\b0\fs26\fsmilli13333 operation on a stream was successful? \uc0\u8232 if result of stream.fail returns false\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	10.	}\expnd0\expndtw0\kerning0
When you are using the 
\f1\b\fs24 get 
\f0\b0\fs26\fsmilli13333 method to read a file character by character, how do you detect the end of a file? \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa266\partightenfactor0
\ls3\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	11.	}EOF\expnd0\expndtw0\kerning0
\uc0\u8232 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa266\partightenfactor0
\ls3\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	12.	}\expnd0\expndtw0\kerning0
Why is the return type of 
\f1\b\fs24 get 
\f0\b0\fs26\fsmilli13333 declared as 
\f1\b\fs24 int 
\f0\b0\fs26\fsmilli13333 instead of 
\f1\b\fs24 char
\f0\b0\fs26\fsmilli13333 ? \uc0\u8232 to allow for EOF sentinel integer\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	13.	}\expnd0\expndtw0\kerning0
What is the purpose of the 
\f1\b\fs24 unget 
\f0\b0\fs26\fsmilli13333 method? \uc0\u8232 to go back one character in the stream\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	14.	}\expnd0\expndtw0\kerning0
When you are using the 
\f1\b\fs24 getline 
\f0\b0\fs26\fsmilli13333 method to read a file line by line, how do you detect the end of a file? \uc0\u8232 boolean  return of variable.eof\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	15.	}\expnd0\expndtw0\kerning0
What classes does the 
\f1\b\fs24 <sstream> 
\f0\b0\fs26\fsmilli13333 library support? How are these classes different from the ones provided in 
\f1\b\fs24 <fstream>
\f0\b0\fs26\fsmilli13333 ? \uc0\u8232 	
\f1\b\fs24 istringstream  and ostringstream 
\f0\b0\fs26\fsmilli13333 \
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	16.	}\expnd0\expndtw0\kerning0
What is meant by the following terms: 
\f2\i subclass, superclass, 
\f0\i0 and 
\f2\i inheritance? 
\f0\i0 \uc0\u8232 subclass >> given class is a child of a higher level lass\
	superclass>> given class oversees other lower level classes\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa266\partightenfactor0
\ls3\ilvl0\cf2 \kerning1\expnd0\expndtw0 inheritance>> classes below in the hierarchy can access the same functions of its parents	\expnd0\expndtw0\kerning0
\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa266\partightenfactor0
\ls3\ilvl0\cf2 \kerning1\expnd0\expndtw0 {\listtext	19.	}\expnd0\expndtw0\kerning0
True or false: The 
\f1\b\fs24 stream 
\f0\b0\fs26\fsmilli13333 class hierarchy of Figure 4-7 shows that 
\f1\b\fs24 istream 
\f0\b0\fs26\fsmilli13333 \uc0\u8232 is a subclass of 
\f1\b\fs24 istringstream
\f0\b0\fs26\fsmilli13333 . \uc0\u8232 false\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	20.	}\expnd0\expndtw0\kerning0
Why does the 
\f1\b\fs24 copyStream 
\f0\b0\fs26\fsmilli13333 function take arguments of type 
\f1\b\fs24 istream 
\f0\b0\fs26\fsmilli13333 and \uc0\u8232 
\f1\b\fs24 ostream 
\f0\b0\fs26\fsmilli13333 instead of 
\f1\b\fs24 ifstream 
\f0\b0\fs26\fsmilli13333 and 
\f1\b\fs24 ofstream
\f0\b0\fs26\fsmilli13333 ? \uc0\u8232 to avoid taking cout as argument \
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	21.	}\expnd0\expndtw0\kerning0
What are the advantages of using the 
\f1\b\fs24 getInteger 
\f0\b0\fs26\fsmilli13333 and 
\f1\b\fs24 getReal 
\f0\b0\fs26\fsmilli13333 functions \uc0\u8232 from 
\f1\b\fs24 simpio.h 
\f0\b0\fs26\fsmilli13333 over using the 
\f1\b\fs24 >> 
\f0\b0\fs26\fsmilli13333 extraction operator? \uc0\u8232 simple I.o functions can check for user prompt errors easily\
\ls3\ilvl0\kerning1\expnd0\expndtw0 {\listtext	22.	}\expnd0\expndtw0\kerning0
If this text does not describe the functions exported by a library in tabular form, what options do you have for learning how to use that library? \uc0\u8232 on the Internet \
}